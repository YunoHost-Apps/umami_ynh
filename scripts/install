#!/bin/bash

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# INSTALL DEPENDENCIES
#=================================================
ynh_script_progression "Installing dependencies..."

# Install Nodejs
ynh_nodejs_install

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression "Setting up source files..."

# Download, check integrity, uncompress and patch the source from app.src
ynh_setup_source --dest_dir="$install_dir/build"

#REMOVEME? Assuming the install dir is setup using ynh_setup_source, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chmod -R o-rwx "$install_dir"
#REMOVEME? Assuming the install dir is setup using ynh_setup_source, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chown -R $app:www-data "$install_dir"
#=================================================
# SYSTEM CONFIGURATION
#=================================================
ynh_script_progression "Adding system configurations related to $app..."

# Create a dedicated NGINX config
ynh_config_add_nginx

# Create a dedicated systemd config
ynh_config_add_systemd

yunohost service add $app --description="Web Analytics" --log="/var/log/$app/$app.log"

#=================================================
# ADD A CONFIGURATION
#=================================================
ynh_script_progression "Adding $app's configuration..."

ynh_config_add --template=".env" --destination="$install_dir/build/.env"

#REMOVEME? Assuming the file is setup using ynh_config_add, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chmod 650 "$install_dir/build/.env"
#REMOVEME? Assuming the file is setup using ynh_config_add, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chown $app:$app "$install_dir/build/.env"

ynh_script_progression "Provisioning pgcrypto..."

ynh_psql_db_shell <<< "CREATE EXTENSION IF NOT EXISTS pgcrypto;"

#=================================================
# CONFIGURE THE APP
#=================================================
ynh_script_progression "Configuring the app..."

pushd "$install_dir/build"

	ynh_hide_warnings ynh_exec_as_app node_load_PATH yarn install
	ynh_hide_warnings ynh_exec_as_app node_load_PATH NEXT_TELEMETRY_DISABLED=1 yarn build

	# Actual app is a subset of release assets
	# List of deps based on Dockerfile: https://github.com/umami-software/umami/blob/master/Dockerfile
	ynh_safe_rm "node_modules/"
	mv next.config.js .next/standalone/
	mv public .next/standalone/
	mv prisma .next/standalone/
	mv scripts .next/standalone/
	mv .next/static .next/standalone/.next
popd

mkdir "$install_dir/release"
chmod -R o-rwx "$install_dir/release"
chown -R $app:www-data "$install_dir/release"

mv -f $install_dir/build/.next/standalone/* $install_dir/build/.next/standalone/.[!.]* $install_dir/release

pushd "$install_dir/release"
	ynh_hide_warnings ynh_exec_as_app node_load_PATH yarn add npm-run-all dotenv prisma
popd

ynh_safe_rm "$install_dir/.cache"

ynh_safe_rm "$install_dir/build"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression "Starting $app's systemd service..."

# Start a systemd service
ynh_systemctl --service=$app --action="start"

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression "Installation of $app completed"
