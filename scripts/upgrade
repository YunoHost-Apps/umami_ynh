#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# CHECK VERSION
#=================================================

upgrade_type=$(ynh_check_app_version_changed)

#=================================================
# STANDARD UPGRADE STEPS
#=================================================
# ENSURE DOWNWARD COMPATIBILITY
#=================================================
ynh_script_progression --message="Ensuring downward compatibility..." --weight=1

# If language doesn't exist, create it
if [ -z "${language:-}" ]; then
	language="en-US"
	ynh_app_setting_set --app=$app --key=language --value=$language
fi

#=================================================
# STANDARD UPGRADE STEPS
#=================================================
# STOP SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Stopping a systemd service..." --weight=1

ynh_systemd_action --service_name=$app --action="stop" --log_path="/var/log/$app/$app.log"

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================

if [ $(ynh_compare_current_package_version --comparison le --version 2.6.2~ynh4) ]; then
	ynh_script_progression --message="Removing old files..." --weight=2
	rm -rf "$install_dir/{*,.*}"
fi

if [[ "$upgrade_type" == "UPGRADE_APP" || $(ynh_compare_current_package_version --comparison le --version 2.6.2~ynh4) ]]; then
	ynh_script_progression --message="Upgrading source files..." --weight=5
	# Download, check integrity, uncompress and patch the source from app.src
	ynh_setup_source --dest_dir="$install_dir/build" --full_replace=1 #--keep=".env"
fi

chmod -R o-rwx "$install_dir/build"
chown -R $app:www-data "$install_dir/build"

#=================================================
# UPGRADE DEPENDENCIES
#=================================================
ynh_script_progression --message="Upgrading dependencies..." --weight=10

# Install Nodejs
ynh_exec_warn_less ynh_install_nodejs --nodejs_version=$nodejs_version

#=================================================
# REAPPLY SYSTEM CONFIGURATIONS
#=================================================
ynh_script_progression --message="Upgrading system configurations related to $app..." --weight=1

# Create a dedicated NGINX config
ynh_add_nginx_config

# Create a dedicated systemd config
ynh_add_systemd_config

yunohost service add $app --description="Web Analytics" --log="/var/log/$app/$app.log"

#=================================================
# ADD A CONFIGURATION
#=================================================
ynh_script_progression --message="Adding a configuration file..." --weight=1

ynh_add_config --template="../conf/.env" --destination="$install_dir/build/.env"

chmod 650 "$install_dir/build/.env"
chown $app:$app "$install_dir/build/.env"

ynh_script_progression --message="Provisioning pgcrypto..." --weight=1

ynh_psql_execute_as_root --sql="CREATE EXTENSION IF NOT EXISTS pgcrypto;" --database="$db_name"

#=================================================
# CONFIGURE THE APP
#=================================================
if [[ "$upgrade_type" == "UPGRADE_APP" || $(ynh_compare_current_package_version --comparison le --version 2.6.2~ynh4) ]]; then
	ynh_script_progression --message="Configuring the app..." --weight=15

	pushd $install_dir/build
		ynh_use_nodejs
		ynh_exec_warn_less ynh_exec_as $app env $ynh_node_load_PATH yarn install
		ynh_exec_warn_less ynh_exec_as $app env $ynh_node_load_PATH NEXT_TELEMETRY_DISABLED=1 yarn build

		# Actual app is a subset of release assets
		# List of deps based on Dockerfile: https://github.com/umami-software/umami/blob/master/Dockerfile
		ynh_secure_remove --file="node_modules/"
		mv next.config.js .next/standalone/
		mv public .next/standalone/
		mv prisma .next/standalone/
		mv scripts .next/standalone/
		mv .next/static .next/standalone/.next
	popd

	ynh_secure_remove --file="$install_dir/release"

	mkdir "$install_dir/release"
	chmod -R o-rwx "$install_dir/release"
	chown -R $app:www-data "$install_dir/release"

	mv -f $install_dir/build/.next/standalone/* $install_dir/build/.next/standalone/.[!.]* $install_dir/release

	pushd "$install_dir/release"
		ynh_exec_warn_less ynh_exec_as $app env $ynh_node_load_PATH yarn add npm-run-all dotenv prisma
	popd
fi

ynh_secure_remove --file="$install_dir/.cache"
ynh_secure_remove --file="$install_dir/build"


#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Starting a systemd service..." --weight=1

ynh_systemd_action --service_name=$app --action="start" --log_path="/var/log/$app/$app.log"

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Upgrade of $app completed" --last
