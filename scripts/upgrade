#!/bin/bash

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# ENSURE DOWNWARD COMPATIBILITY
#=================================================
ynh_script_progression "Ensuring downward compatibility..."

ynh_app_setting_set_default --key=language --value="en-US"

#=================================================
# STOP SYSTEMD SERVICE
#=================================================
ynh_script_progression "Stopping $app's systemd service..."

ynh_systemctl --service=$app --action="stop"

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================

if $(ynh_app_upgrading_from_version_before_or_equal_to 2.7.0~ynh4)
then
	# Purge old root directory's contents
	ynh_script_progression "Removing old files..."
	mkdir /tmp/release
	chmod -R o-rwx /tmp/release
	chown -R $app:www-data /tmp/release
	mv -f $install_dir/* $install_dir/.[!.]* /tmp/release
	mv /tmp/release $install_dir/
fi

if [[ "$upgrade_type" == "UPGRADE_APP" || $(ynh_app_upgrading_from_version_before_or_equal_to 2.7.0~ynh4) ]]; then
	ynh_script_progression "Upgrading source files..."
	# Download, check integrity, uncompress and patch the source from app.src
	ynh_setup_source --dest_dir="$install_dir/build" --full_replace #--keep=".env"
	chown -R $app:$app $install_dir/build
fi

#=================================================
# UPGRADE DEPENDENCIES
#=================================================
ynh_script_progression "Upgrading dependencies..."

ynh_nodejs_install

#=================================================
# REAPPLY SYSTEM CONFIGURATIONS
#=================================================
ynh_script_progression "Upgrading system configurations related to $app..."

ynh_config_add_nginx

ynh_config_add_systemd

yunohost service add $app --description="Web Analytics" --log="/var/log/$app/$app.log"

#=================================================
# ADD A CONFIGURATION
#=================================================
ynh_script_progression "Adding $app's configuration..."

ynh_config_add --template=".env" --destination="$install_dir/build/.env"

chmod 650 "$install_dir/build/.env"

ynh_script_progression "Provisioning pgcrypto..."

ynh_psql_db_shell <<< "CREATE EXTENSION IF NOT EXISTS pgcrypto;"

#=================================================
# CONFIGURE THE APP
#=================================================

if [[ "$upgrade_type" == "UPGRADE_APP" || $(ynh_app_upgrading_from_version_before_or_equal_to 2.7.0~ynh4) ]]; then
	ynh_script_progression "Configuring the app..."

	pushd $install_dir/build
		ynh_hide_warnings ynh_exec_as_app yarn install
		ynh_hide_warnings ynh_exec_as_app NEXT_TELEMETRY_DISABLED=1 yarn build

		# Actual app is a subset of release assets
		# List of deps based on Dockerfile: https://github.com/umami-software/umami/blob/master/Dockerfile
		ynh_safe_rm "node_modules/"
		mv next.config.js .next/standalone/
		mv public .next/standalone/
		mv prisma .next/standalone/
		mv scripts .next/standalone/
		mv .next/static .next/standalone/.next
	popd

	ynh_safe_rm "$install_dir/release"

	mkdir "$install_dir/release"
	chmod -R o-rwx "$install_dir/release"
	chown -R $app:www-data "$install_dir/release"

	mv -f $install_dir/build/.next/standalone/* $install_dir/build/.next/standalone/.[!.]* $install_dir/release

	pushd "$install_dir/release"
		ynh_hide_warnings ynh_exec_as_app yarn add npm-run-all dotenv prisma
	popd
fi

ynh_safe_rm "$install_dir/.cache"
ynh_safe_rm "$install_dir/build"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression "Starting $app's systemd service..."

ynh_systemctl --service=$app --action="start"

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression "Upgrade of $app completed"
